# File: crates/storm-ecs/Cargo.toml
# StormCore ECS (Entity Component System) Module
# High-performance, AI-integrated entity management for virtual worlds

[package]
name = "storm-ecs"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
description = "AI-enhanced Entity Component System for StormCore virtual world engine"
keywords = ["ecs", "entity", "component", "system", "ai"]
categories = ["game-development", "simulation"]

[dependencies]
# Core ECS engine - legion provides excellent performance and parallel execution
legion = { version = "0.4", features = ["parallel", "extended-tuple-impls"] }

# Async runtime for system scheduling and AI integration
tokio = { workspace = true, features = ["rt-multi-thread", "macros", "sync", "time"] }
futures = { workspace = true }

# Serialization for FFI and networking
serde = { workspace = true, features = ["derive"] }
serde_json = "1.0.141"

# Math utilities for 3D calculations
storm-math = { path = "../storm-math" }

# AI integration dependencies
uuid = { workspace = true, features = ["v4", "serde"] }

# Performance and memory management
smallvec = { version = "1.11", features = ["serde"] }
ahash = "0.8"

# Logging and diagnostics
tracing = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }

# Time utilities for delta calculations
instant = "0.1"

# Optional dependencies
rayon = { version = "1.8", optional = true }
bincode = { version = "1.3", optional = true }
candle-core = { version = "0.6", optional = true }
candle-nn = { version = "0.6", optional = true }
tracking-allocator = { version = "0.4", optional = true }

[features]
default = ["parallel", "extended-serialize"]

# AI-driven entity management and prediction
ai-enhanced = ["dep:candle-core", "dep:candle-nn"]

# Parallel system execution
parallel = ["legion/parallel", "dep:rayon"]

# Extended serialization support for complex components
extended-serialize = ["dep:bincode", "legion/serialize"]

# Debug features for development
debug = ["dep:tracking-allocator"]

# WASM support for web deployment
wasm = ["instant/wasm-bindgen"]

# Cross-world protocol support
protocol-opensim = []
protocol-finalverse = []

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tokio-test = "0.4"
proptest = "1.4"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]